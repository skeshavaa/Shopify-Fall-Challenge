{
	"info": {
		"_postman_id": "d799e68a-3f8c-48bb-985c-b51847207640",
		"name": "Keshavaa's Image Repository API Library",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"testuser\",\r\n    \"email\": \"testuser@gmail.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://young-cove-79509.herokuapp.com/api/users/register",
							"protocol": "https",
							"host": [
								"young-cove-79509",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						},
						"description": "Registers a user and provides a jwt token for adding images"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "queryText",
								"value": "hat",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"testuser@gmail.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://young-cove-79509.herokuapp.com/api/users/login",
							"protocol": "https",
							"host": [
								"young-cove-79509",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "Logs in a user and provides a JWT token for adding images or fetching profile data"
					},
					"response": []
				}
			]
		},
		{
			"name": "Images",
			"item": [
				{
					"name": "Get All Images",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://young-cove-79509.herokuapp.com/api/getImages",
							"protocol": "https",
							"host": [
								"young-cove-79509",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"getImages"
							]
						},
						"description": "Returns a list of all public images and associated information of the image"
					},
					"response": []
				},
				{
					"name": "Search By Image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "queryImage",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "https://young-cove-79509.herokuapp.com/api/searchByImage",
							"protocol": "https",
							"host": [
								"young-cove-79509",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"searchByImage"
							]
						},
						"description": "Returns all images with similar characteristics as the image submitted through the queryImage field in the body of the request"
					},
					"response": []
				},
				{
					"name": "Search By Text",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "queryText",
								"value": "glasses,cat",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://young-cove-79509.herokuapp.com/api/searchByText",
							"protocol": "https",
							"host": [
								"young-cove-79509",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"searchByText"
							]
						},
						"description": "Returns all public images that have characteristics described in the query text, multiple queries can be made, separate each text item by commas"
					},
					"response": []
				},
				{
					"name": "Add Image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwOTZjMzMzNmE3M2E0MDAxNTA3OTMzYyIsImlhdCI6MTYyMDU3ODIwMiwiZXhwIjoxNjIwNTgxODAyfQ.bcspOq56474Gt7yp_i95e14S8mNcIpiA0NFHsMhtltM",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							},
							{
								"key": "name",
								"value": "postmantest",
								"type": "text"
							},
							{
								"key": "tags",
								"value": "profile",
								"type": "text"
							},
							{
								"key": "public",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "https://young-cove-79509.herokuapp.com/api/addImage",
							"protocol": "https",
							"host": [
								"young-cove-79509",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"addImage"
							]
						},
						"description": "To add an image to the image repository. Fill the fields described in the header, and choose an image to upload in the body form data. You must have a valid jwt token to upload an image"
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwOTZjMzMzNmE3M2E0MDAxNTA3OTMzYyIsImlhdCI6MTYyMDU3ODIwMiwiZXhwIjoxNjIwNTgxODAyfQ.bcspOq56474Gt7yp_i95e14S8mNcIpiA0NFHsMhtltM",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://young-cove-79509.herokuapp.com/api/users/user",
							"protocol": "https",
							"host": [
								"young-cove-79509",
								"herokuapp",
								"com"
							],
							"path": [
								"api",
								"users",
								"user"
							]
						},
						"description": "Set a valid jwt token in the header to receive the user's profile as well as their uploads. This must be a valid jwt token"
					},
					"response": []
				}
			]
		}
	]
}